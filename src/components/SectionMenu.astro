---
// SectionMenu.astro
interface Props {
  sections: {
    id: string;
    title: string;
    icon?: string;
  }[];
}

const { sections } = Astro.props;
---

<nav class="section-menu sticky top-4 z-10 mb-8">
  <div class="bg-gray-800/90 backdrop-blur-sm rounded-lg p-4 shadow-lg border border-gray-700">
    <h3 class="text-lg font-semibold mb-3 text-center text-gray-200">Navegaci√≥n</h3>
    <ul class="flex flex-wrap gap-2 justify-center">
      {sections.map((section) => (
        <li>
          <a
            href={`#${section.id}`}
            class="menu-item flex items-center gap-2 px-4 py-2 bg-gray-700 hover:bg-blue-600 text-gray-200 hover:text-white rounded-lg transition-all duration-300 text-sm font-medium"
            data-section={section.id}
          >
            {section.icon && (
              <span class="text-lg" set:html={section.icon} />
            )}
            <span>{section.title}</span>
          </a>
        </li>
      ))}
    </ul>
  </div>
</nav>

<style>
  .section-menu {
    animation: fadeInDown 0.6s ease-out;
  }

  @keyframes fadeInDown {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .menu-item {
    position: relative;
    overflow: hidden;
  }

  .menu-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    transition: left 0.6s;
  }

  .menu-item:hover::before {
    left: 100%;
  }

  .menu-item.active {
    background: linear-gradient(135deg, #3b82f6, #1d4ed8);
    transform: scale(1.05);
    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .menu-item {
      font-size: 0.875rem;
      padding: 0.5rem 0.75rem;
    }
    
    .menu-item span:last-child {
      display: none;
    }
  }

  @media (min-width: 769px) {
    .menu-item span:first-child {
      display: none;
    }
  }
</style>

<script>
  // Smooth scrolling y highlight del item activo
  document.addEventListener('DOMContentLoaded', () => {
    const menuItems = document.querySelectorAll('.menu-item');
    const sections = document.querySelectorAll('[id]');

    // Smooth scrolling
    menuItems.forEach(item => {
      item.addEventListener('click', (e) => {
        e.preventDefault();
        const targetId = item.getAttribute('href')?.substring(1);
        const targetElement = document.getElementById(targetId || '');
        
        if (targetElement) {
          targetElement.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      });
    });

    // Highlight active section on scroll
    const observerOptions = {
      root: null,
      rootMargin: '-20% 0px -70% 0px',
      threshold: 0
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          // Remove active class from all items
          menuItems.forEach(item => item.classList.remove('active'));
          
          // Add active class to current section's menu item
          const activeItem = document.querySelector(`[data-section="${entry.target.id}"]`);
          if (activeItem) {
            activeItem.classList.add('active');
          }
        }
      });
    }, observerOptions);

    // Observe all sections
    sections.forEach(section => {
      if (section.id && ['planificaciones', 'galeria', 'videos', 'otros'].includes(section.id)) {
        observer.observe(section);
      }
    });
  });
</script>